{
  "3.0.0": {
    "requestUrls": [
      {
        "type": "服务商接入",
        "url": "https://open.youzan.com/api/oauthentry/youzan.trade.virtualcode/3.0.0/apply"
      },
      {
        "type": "商家自有接入",
        "url": "https://open.youzan.com/api/entry/youzan.trade.virtualcode/3.0.0/apply"
      }
    ],
    "requestParams": [
      {
        "name": "code",
        "type": "String",
        "example": "",
        "defaultValue": "",
        "isRequired": "是",
        "desc": "使用购买虚拟商品获得的码",
        "isStruct": false,
        "structUrl": null,
        "struct": null
      }
    ],
    "responseParams": [
      {
        "name": "is_success",
        "type": "Boolean",
        "isRequired": "否",
        "desc": "是否成功",
        "isStruct": false,
        "structUrl": null,
        "struct": {
          "name": "is_success",
          "type": "Boolean",
          "isNeed": "true",
          "desc": "是否成功",
          "defaultValue": "true",
          "example": "true",
          "isStruct": false,
          "children": null
        }
      }
    ],
    "requestDemos": [
      {
        "lang": "java",
        "code": "YZClient client = new DefaultYZClient(new Token(\"token\")); //new Sign(appKey, appSecret)\nYouzanTradeVirtualcodeApplyParams youzanTradeVirtualcodeApplyParams = new YouzanTradeVirtualcodeApplyParams();\n\nyouzanTradeVirtualcodeApplyParams.setCode(\"E20171019171452069700007\");\n\nYouzanTradeVirtualcodeApply youzanTradeVirtualcodeApply = new YouzanTradeVirtualcodeApply();\nyouzanTradeVirtualcodeApply.setAPIParams(youzanTradeVirtualcodeApplyParams);\nYouzanTradeVirtualcodeApplyResult result = client.invoke(youzanTradeVirtualcodeApply);"
      },
      {
        "lang": "csharp",
        "code": "Auth auth = new Token(\"xxx\"); // Auth auth = new Sign(\"app_id\", \"app_secret\");\n\nYZClient yzClient = new DefaultYZClient(auth);\nDictionary<string, object> dict = new System.Collections.Generic.Dictionary<string, object>();\ndict.Add(\"code\", \"E20171019171452069700007\");\n\n\nvar result = yzClient.Invoke(\"youzan.trade.virtualcode.apply\", \"3.0.0\", \"POST\", dict, null);\nConsole.WriteLine(result);\n"
      },
      {
        "lang": "php",
        "code": "<?php\nrequire_once __DIR__ . '/lib/YZTokenClient.php';\n\n$token = 'fill your token';//请填入商家授权后获取的access_token\n$client = new YZTokenClient($token);\n\n$method = 'youzan.trade.virtualcode.apply'; //要调用的api名称\n$api_version = '3.0.0'; //要调用的api版本号\n\n$my_params = [\n    'code' => 'E20171019171452069700007',\n];\n\n$my_files = [\n];\n\necho '<pre>';\nvar_dump(\n    $client->post($method, $api_version, $my_params, $my_files)\n);\necho '</pre>';"
      },
      {
        "lang": "python",
        "code": "token = auth.Token(token='token') #auth.Sign(app_id='app_id', app_secret='app_secret')\n\nclient = YZClient(token)\n\nparams={}\n\nparams['code']=\"E20171019171452069700007\"\n\nfiles=[]\n\nprint client.invoke('youzan.trade.virtualcode.apply', '3.0.0', 'GET', params=params, files=files)\n"
      },
      {
        "lang": "nodejs",
        "code": "var YZClient = require('yz-open-sdk-nodejs');\nvar Token = require('./node_modules/yz-open-sdk-nodejs/Token');\n\nvar YZClient = new YZClient(new Token('xxxx')); // var YZClient = new YZClient(new Sign('app_id', 'app_secret'));\n\nparams={};\n\nparams['code']=\"E20171019171452069700007\";\n\n\nvar promise = YZClient.invoke('youzan.trade.virtualcode.apply', '3.0.0', 'GET', params, undefined);\n\npromise.then(function(resp) {\n    console.log('resp: ' + resp.body);\n    var data = JSON.parse(resp.body);\n    console.log(data);\n}, function(err) {\n    console.log('err: ' + err);\n}, function(prog) {\n    console.log('prog: ' + prog);\n});\n"
      }
    ],
    "errorCodes": [
      {
        "errorCode": "50000",
        "errorDesc": "内部业务异常",
        "solution": "请联系技术支持答疑"
      }
    ],
    "responseDemo": "{\"response\":{\"is_success\":true}}",
    "errorResponseDemo": "{\"error_response\":{\"code\":101300000,\"msg\":\"\\u8ba2\\u5355\\u4e0d\\u5b58\\u5728\"}}"
  },
  "name": "apply",
  "ids": [
    8806
  ],
  "scenarios": "核销虚拟商品（购买虚拟商品会获得“核销码”，可以用该接口核销）",
  "version": [
    "3.0.0"
  ],
  "desc": "核销虚拟商品"
}
